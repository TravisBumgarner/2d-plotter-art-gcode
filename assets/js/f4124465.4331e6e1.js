"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[315],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,m=d["".concat(c,".").concat(u)]||d[u]||f[u]||a;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2553:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:0,description:"Convert an image into a wandering of parallel lines wandering where each line is one of N colors."},l="2023-7-15 Bunch of Lines",i={unversionedId:"gallery/bunch_of_lines",id:"gallery/bunch_of_lines",title:"2023-7-15 Bunch of Lines",description:"Convert an image into a wandering of parallel lines wandering where each line is one of N colors.",source:"@site/docs/gallery/bunch_of_lines.mdx",sourceDirName:"gallery",slug:"/gallery/bunch_of_lines",permalink:"/gcode2dplotterart/docs/gallery/bunch_of_lines",draft:!1,editUrl:"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/gallery/bunch_of_lines.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,description:"Convert an image into a wandering of parallel lines wandering where each line is one of N colors."},sidebar:"tutorialSidebar",previous:{title:"Gallery",permalink:"/gcode2dplotterart/docs/category/gallery"},next:{title:"2023-06-20 Sine Waves",permalink:"/gcode2dplotterart/docs/gallery/sine_waves"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Images",id:"images",level:2},{value:"Plotter Preview",id:"plotter-preview",level:2},{value:"Code",id:"code",level:2}],s={toc:p},d="wrapper";function f(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2023-7-15-bunch-of-lines"},"2023-7-15 Bunch of Lines"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Take in a color. Plot a bunch of lines in a grid with a fixed length and a variable slope."),(0,o.kt)("h2",{id:"images"},"Images"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"example of plotted code",src:n(3910).Z,width:"1600",height:"1222"}),"\n",(0,o.kt)("img",{alt:"example of plotted code",src:n(8913).Z,width:"1540",height:"1600"})),(0,o.kt)("h2",{id:"plotter-preview"},"Plotter Preview"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"preview screenshot",src:n(7870).Z,width:"640",height:"480"})),(0,o.kt)("h2",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'from gcode2dplotterart import Plotter2D\nfrom math import sin\nfrom random import randint\n\nplotter = Plotter2D(\n    title="Bunch of Lines",\n    x_min=0,\n    x_max=240,\n    y_min=0,\n    y_max=170,\n    feed_rate=10000,\n    output_directory="./output",\n    handle_out_of_bounds="Warning",\n)\n\nCOLORS = ["purple", "blue", "yellow"]\nHYPOTENUSE = 10\n\nfor color in COLORS:\n    plotter.add_layer(title=color, color=color)\n\nfor x0 in range(plotter.x_min, plotter.x_max, 10):\n    for y0 in range(plotter.y_min, plotter.y_max, 10):\n        slope = sin((x0**2 + y0**2) / (plotter.x_max**2 + plotter.y_max**2))\n\n        delta_x = HYPOTENUSE * (1 / (1 + slope**2)) ** 0.5\n        delta_y = delta_x * slope\n\n        x1 = x0 - delta_x\n        y1 = y0 - delta_y\n\n        x2 = x0 + delta_x\n        y2 = y0 + delta_y\n\n        rand = randint(0, len(COLORS))\n        if rand == len(COLORS):\n            # Every so often don\'t plot a line. For Art.\n            continue\n\n        plotter.layers[COLORS[rand]].add_line(x1, y1, x2, y2)\n\n\nplotter.preview()\nplotter.save()\n\n')))}f.isMDXComponent=!0},3910:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/example1-574130041c539300f015a217ffa9afe0.jpg"},8913:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/example2-0fd7d5ea0fce5dfe0be18aa06b92a3e3.jpg"},7870:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/preview-a5dfcd73e4d497e45e32c7b14fff8222.png"}}]);