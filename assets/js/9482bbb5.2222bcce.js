"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[310],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,p=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),c=s(n),g=o,m=c["".concat(p,".").concat(g)]||c[g]||u[g]||r;return n?a.createElement(m,i(i({ref:e},d),{},{components:n})):a.createElement(m,i({ref:e},d))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,i=new Array(r);i[0]=g;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[c]="string"==typeof t?t:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},267:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={},i=void 0,l={unversionedId:"api/layer",id:"api/layer",title:"layer",description:"InstructionPoint Objects",source:"@site/docs/api/layer.mdx",sourceDirName:"api",slug:"/api/layer",permalink:"/gcode2dplotterart/docs/api/layer",draft:!1,editUrl:"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/api/layer.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Plotter",permalink:"/gcode2dplotterart/docs/api/Plotter"}},p={},s=[{value:"InstructionPoint Objects",id:"instructionpoint-objects",level:2},{value:"to_g_code",id:"to_g_code",level:4},{value:"SpecialInstructionComment Objects",id:"specialinstructioncomment-objects",level:2},{value:"to_g_code",id:"to_g_code-1",level:4},{value:"SpecialInstructionFeedRate Objects",id:"specialinstructionfeedrate-objects",level:2},{value:"to_g_code",id:"to_g_code-2",level:4},{value:"SimpleInstruction Objects",id:"simpleinstruction-objects",level:2},{value:"to_g_code",id:"to_g_code-3",level:4},{value:"SimpleInstructionDrawingHeight2DPlotter Objects",id:"simpleinstructiondrawingheight2dplotter-objects",level:2},{value:"SimpleInstructionNavigationHeight2DPlotter Objects",id:"simpleinstructionnavigationheight2dplotter-objects",level:2},{value:"SimpleInstructionPause Objects",id:"simpleinstructionpause-objects",level:2},{value:"SimpleInstructionUnitsMM Objects",id:"simpleinstructionunitsmm-objects",level:2},{value:"SimpleInstructionProgramEnd Objects",id:"simpleinstructionprogramend-objects",level:2},{value:"SpecialInstructionDrawingHeight3DPrinter Objects",id:"specialinstructiondrawingheight3dprinter-objects",level:2},{value:"to_g_code",id:"to_g_code-4",level:4},{value:"SpecialInstructionNavigationHeight3DPrinter Objects",id:"specialinstructionnavigationheight3dprinter-objects",level:2},{value:"to_g_code",id:"to_g_code-5",level:4},{value:"Layer Objects",id:"layer-objects",level:2},{value:"get_min_and_max_points",id:"get_min_and_max_points",level:4},{value:"set_feed_rate",id:"set_feed_rate",level:4},{value:"add_point",id:"add_point",level:4},{value:"add_path",id:"add_path",level:4},{value:"add_instruction",id:"add_instruction",level:4},{value:"add_comment",id:"add_comment",level:4},{value:"add_rectangle",id:"add_rectangle",level:4},{value:"add_circle",id:"add_circle",level:4},{value:"save",id:"save",level:4},{value:"preview_paths",id:"preview_paths",level:4},{value:"get_plotting_data",id:"get_plotting_data",level:4},{value:"Layer2d Objects",id:"layer2d-objects",level:2},{value:"set_mode_to_plotting",id:"set_mode_to_plotting",level:4},{value:"set_mode_to_navigation",id:"set_mode_to_navigation",level:4},{value:"Layer3d Objects",id:"layer3d-objects",level:2},{value:"set_mode_to_plotting",id:"set_mode_to_plotting-1",level:4},{value:"set_mode_to_navigation",id:"set_mode_to_navigation-1",level:4}],d={toc:s},c="wrapper";function u(t){let{components:e,...n}=t;return(0,o.kt)(c,(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("a",{id:"gcode2dplotterart/Layer"}),(0,o.kt)("h1",{id:"gcode2dplotterartlayer"},"gcode2dplotterart/Layer"),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.InstructionPoint"}),(0,o.kt)("h2",{id:"instructionpoint-objects"},"InstructionPoint Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class InstructionPoint()\n")),(0,o.kt)("p",null,"A class representing a point in 2D space with an optional feed rate."),(0,o.kt)("p",null,"Attributes\nfeed_rate : float\nThe feed rate of the point.\nx : float\nThe x-coordinate of the point.\ny : float\nThe y-coordinate of the point."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Raises"),":"),(0,o.kt)("p",null,"  ValueError\nIf x or y is not provided."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.InstructionPoint.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nA point in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionComment"}),(0,o.kt)("h2",{id:"specialinstructioncomment-objects"},"SpecialInstructionComment Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SpecialInstructionComment()\n")),(0,o.kt)("p",null,"A class representing a comment in G-Code."),(0,o.kt)("p",null,"Attributes\ntext : str\nThe text of the comment."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionComment.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code-1"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nA comment in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionFeedRate"}),(0,o.kt)("h2",{id:"specialinstructionfeedrate-objects"},"SpecialInstructionFeedRate Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SpecialInstructionFeedRate()\n")),(0,o.kt)("p",null,"A class representing the feed rate in G-Code."),(0,o.kt)("p",null,"Attributes\nfeed_rate : float\nThe feed rate."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionFeedRate.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code-2"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nThe feed rate in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstruction"}),(0,o.kt)("h2",{id:"simpleinstruction-objects"},"SimpleInstruction Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstruction()\n")),(0,o.kt)("p",null,"A class representing a special instruction in G-Code."),(0,o.kt)("p",null,"Attributes\ninstruction : str\nThe instruction to use."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstruction.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code-3"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nA special instruction in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstructionDrawingHeight2DPlotter"}),(0,o.kt)("h2",{id:"simpleinstructiondrawingheight2dplotter-objects"},"SimpleInstructionDrawingHeight2DPlotter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstructionDrawingHeight2DPlotter(SimpleInstruction)\n")),(0,o.kt)("p",null,"The height of the plotter head when plotting on the plotting surface."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstructionNavigationHeight2DPlotter"}),(0,o.kt)("h2",{id:"simpleinstructionnavigationheight2dplotter-objects"},"SimpleInstructionNavigationHeight2DPlotter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstructionNavigationHeight2DPlotter(SimpleInstruction)\n")),(0,o.kt)("p",null,"The height of the plotter head when plotting on the plotting surface."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstructionPause"}),(0,o.kt)("h2",{id:"simpleinstructionpause-objects"},"SimpleInstructionPause Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstructionPause(SimpleInstruction)\n")),(0,o.kt)("p",null,"Perform a brief pause. Useful, to reduce and prevent vibration."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstructionUnitsMM"}),(0,o.kt)("h2",{id:"simpleinstructionunitsmm-objects"},"SimpleInstructionUnitsMM Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstructionUnitsMM(SimpleInstruction)\n")),(0,o.kt)("p",null,"Set the units of the plotting device to mm."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SimpleInstructionProgramEnd"}),(0,o.kt)("h2",{id:"simpleinstructionprogramend-objects"},"SimpleInstructionProgramEnd Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleInstructionProgramEnd(SimpleInstruction)\n")),(0,o.kt)("p",null,"Instruct the plotting device that plotting has concluded."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionDrawingHeight3DPrinter"}),(0,o.kt)("h2",{id:"specialinstructiondrawingheight3dprinter-objects"},"SpecialInstructionDrawingHeight3DPrinter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SpecialInstructionDrawingHeight3DPrinter()\n")),(0,o.kt)("p",null,"The height of the plotter head when plotting on the plotting surface."),(0,o.kt)("p",null,"Attributes\nz_plotting_height : float\nThe height of the plotting instrument when plotting."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionDrawingHeight3DPrinter.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code-4"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nThe plotting height in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionNavigationHeight3DPrinter"}),(0,o.kt)("h2",{id:"specialinstructionnavigationheight3dprinter-objects"},"SpecialInstructionNavigationHeight3DPrinter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SpecialInstructionNavigationHeight3DPrinter()\n")),(0,o.kt)("p",null,"The height of the plotter head when navigating around the plotting surface."),(0,o.kt)("p",null,"Attributes\nz_navigating_height : float\nThe height of the navigating instrument when navigating."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.SpecialInstructionNavigationHeight3DPrinter.to_g_code"}),(0,o.kt)("h4",{id:"to_g_code-5"},"to","_","g","_","code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def to_g_code() -> str\n")),(0,o.kt)("p",null,"Convert instruction to G-Code."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  string\nThe navigating height in G-Code format."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer"}),(0,o.kt)("h2",{id:"layer-objects"},"Layer Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Layer(ABC)\n")),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.get_min_and_max_points"}),(0,o.kt)("h4",{id:"get_min_and_max_points"},"get","_","min","_","and","_","max","_","points"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def get_min_and_max_points() -> Dict[str, float]\n")),(0,o.kt)("p",null,"Find the min and max plot points of the layer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{x_min")," - float, y_min: float, x_max: float, y_max: float}\nA dictionary containing the max and min plot points of the layer.")),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.set_feed_rate"}),(0,o.kt)("h4",{id:"set_feed_rate"},"set","_","feed","_","rate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def set_feed_rate(feed_rate: float,\n                  instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Set the speed at which the plotter head moves."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  feed_rate : float\nThe feed rate to set.\ninstruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_point"}),(0,o.kt)("h4",{id:"add_point"},"add","_","point"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def add_point(x: float,\n              y: float,\n              instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Add a point to the layer. Typically not used directly, instead use one of the other add methods."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  x : float\nThe x-coordinate of the point.\ny : float\nThe y-coordinate of the point.\ninstruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_path"}),(0,o.kt)("h4",{id:"add_path"},"add","_","path"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def add_path(points: List[Tuple[float, float]],\n             instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Add a path layer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  points : List[Tuple","[float, float]","\nAn array of points to add\ninstruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_instruction"}),(0,o.kt)("h4",{id:"add_instruction"},"add","_","instruction"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def add_instruction(instruction: Union[\n    SimpleInstructionPause,\n    SpecialInstructionFeedRate,\n    SpecialInstructionComment,\n    SpecialInstructionDrawingHeight3DPrinter,\n    SpecialInstructionNavigationHeight3DPrinter,\n    SimpleInstructionNavigationHeight2DPlotter,\n    SimpleInstructionDrawingHeight2DPlotter,\n    SimpleInstructionUnitsMM,\n    SimpleInstructionProgramEnd,\n],\n                    instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Add a special instruction."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  special_instruction : SpecialInstructionEnum\nSee ",(0,o.kt)("inlineCode",{parentName:"p"},"SpecialInstructionEnum")," for special instruction definitions\ninstruction_type : str\nThe type of instruction to use."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_comment"}),(0,o.kt)("h4",{id:"add_comment"},"add","_","comment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def add_comment(text: str, instruction_type: TInstructionType) -> Self\n")),(0,o.kt)("p",null,"Add a comment to the layer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  text : str\nThe text to add.\ninstruction_type : str\nThe type of instruction to use."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_rectangle"}),(0,o.kt)("h4",{id:"add_rectangle"},"add","_","rectangle"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def add_rectangle(x_start: float,\n                  y_start: float,\n                  x_end: float,\n                  y_end: float,\n                  instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Adds a rectangle to the layer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  x_start : float\nThe x-coordinate of the starting point of the rectangle.\ny_start : float\nThe y-coordinate of the starting point of the rectangle.\nx_end : float\nThe x-coordinate of the ending point of the rectangle.\ny_end : float\nThe y-coordinate of the ending point of the rectangle.\ninstruction_type : str, optional\nThe type of instruction to use. Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.add_circle"}),(0,o.kt)("h4",{id:"add_circle"},"add","_","circle"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def add_circle(x_center: float,\n               y_center: float,\n               radius: float,\n               num_points: int = 36,\n               instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Adds a circle to the layer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  x_center : float\nThe x-coordinate of the center of the circle.\ny_center : float\nThe y-coordinate of the center of the circle.\nradius : float\nThe radius of the circle.\nnum_points : int\nThe number of points to use to approximate the circle. Default is 36.\ninstruction_type : float\nThe type of instruction to use. Default is 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.save"}),(0,o.kt)("h4",{id:"save"},"save"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def save(file_path: str) -> None\n")),(0,o.kt)("p",null,"Saves the layer instructions to a file at the specified file path."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  string\nThe path to the file where the layer instructions will be saved."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.preview_paths"}),(0,o.kt)("h4",{id:"preview_paths"},"preview","_","paths"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def preview_paths() -> List[List[Tuple[float, float]]]\n")),(0,o.kt)("p",null,"Generate an array of paths for the given layer. This will be used by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Plotter"),"\nto generate a preview graph of the plot. Only looks at instructions during the ",(0,o.kt)("inlineCode",{parentName:"p"},"plotting"),"\nphase."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer.get_plotting_data"}),(0,o.kt)("h4",{id:"get_plotting_data"},"get","_","plotting","_","data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def get_plotting_data() -> Dict[str, List[str]]\n")),(0,o.kt)("p",null,"Get current plotting data"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'{"setup"'),' - [], "plotting": [], "teardown": []}\nA dictionary containing the setup, plotting, and teardown instructions as an array of G-Code\ninstruction strings.')),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer2d"}),(0,o.kt)("h2",{id:"layer2d-objects"},"Layer2d Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Layer2d(Layer)\n")),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer2d.set_mode_to_plotting"}),(0,o.kt)("h4",{id:"set_mode_to_plotting"},"set","_","mode","_","to","_","plotting"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def set_mode_to_plotting(\n        instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Lower the pen. Should be used when starting a path."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  instruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer2d.set_mode_to_navigation"}),(0,o.kt)("h4",{id:"set_mode_to_navigation"},"set","_","mode","_","to","_","navigation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def set_mode_to_navigation(\n        instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Raise the pen. Should be used once plotting a path is complete before moving on to next path."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  instruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer3d"}),(0,o.kt)("h2",{id:"layer3d-objects"},"Layer3d Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Layer3d(Layer)\n")),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer3d.set_mode_to_plotting"}),(0,o.kt)("h4",{id:"set_mode_to_plotting-1"},"set","_","mode","_","to","_","plotting"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def set_mode_to_plotting(\n        instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Lower the pen. Should be used when starting a path."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  instruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."),(0,o.kt)("a",{id:"gcode2dplotterart/Layer.Layer3d.set_mode_to_navigation"}),(0,o.kt)("h4",{id:"set_mode_to_navigation-1"},"set","_","mode","_","to","_","navigation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def set_mode_to_navigation(\n        instruction_type: TInstructionType = "plotting") -> Self\n')),(0,o.kt)("p",null,"Raise the pen. Should be used once plotting a path is complete before moving on to next path."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("p",null,"  instruction_type : str\nThe type of instruction to use.  Defaults to 'plotting'."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  Layer\nThe Layer object. Allows for chaining of add methods."))}u.isMDXComponent=!0}}]);